version: '3.8'

services:
  # Database
  db:
    image: postgres:15-alpine
    container_name: phantom-folio-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ${HOME}/phantom-folio-data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - phantom-net

  # Cache and task queue
  redis:
    image: redis:alpine
    container_name: phantom-folio-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - phantom-net

  # OCR service with Tesseract
  ocr-worker:
    image: phantom-folio-ocr-worker
    container_name: phantom-folio-ocr-worker
    build:
      context: .
      dockerfile: docker/ocr-worker.Dockerfile
    restart: unless-stopped
    depends_on:
      - redis
      - db
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/phantom_folio
      - TESSDATA_PREFIX=/app/models/tessdata
      - LOG_LEVEL=INFO
    volumes:
      - ${HOME}/phantom-folio-data/library:/app/library
      - ${HOME}/phantom-folio-data/temp:/app/temp
      - ${HOME}/phantom-folio-data/models:/app/models
    healthcheck:
      test: ["CMD-SHELL", "python -c 'import sys; sys.exit(0)'"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - phantom-net

  # Web interface and API
  web:
    image: phantom-folio-web
    container_name: phantom-folio-web
    build:
      context: .
      dockerfile: docker/web.Dockerfile
    restart: unless-stopped
    depends_on:
      - redis
      - db
      - ocr-worker
    environment:
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/phantom_folio
      - TESSDATA_PREFIX=/app/models/tessdata
      - LOG_LEVEL=INFO
      - WEB_CONCURRENCY=2
    volumes:
      - ${HOME}/phantom-folio-data/library:/app/library
      - ${HOME}/phantom-folio-data/temp:/app/temp
      - ${HOME}/phantom-folio-data/models:/app/models
    ports:
      - "8000:8000"  # API
      - "8080:8080"  # Web interface
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - phantom-net

networks:
  phantom-net:
    driver: bridge

volumes:
  redis-data: